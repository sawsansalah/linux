We recently migrated one of our WordPress website from old server to a new infrastructure in Stratos Datacenter. We have already setup LAMP except database. We have also restored website code however we need to restore database to make it work on new infra. Please perform the below given steps on DB host:


a. Install/Configure MariaDB server.

b. Create a database with name kodekloud_db8.

c. There is a DB dump on jump_host under location /home/thor/db.sql. Restore this database in newly create database.

d. Create a user kodekloud_cap and set any password you like.

e. Grant full permissions to user kodekloud_cap on database kodekloud_db8.

f. Update database related details in /data/wp-config.php file on storage server which is our NFS server having a share /data that is mounted on each app server on location /var/www/html. (for more details about how to update WordPress config file please visit https://wordpress.org/support/article/editing-wp-config-php/)

g. You can access the website on LBR link, to do so click on the + button on top of your terminal and select option Select port to view on Host 1 and after adding port 80 click on Display Port.
    

IN DB SERVER
=============
    1  hostnamectl                                   --TO CHECK LINUX OR CENTOS
    2  vi /etc/yum.repos.d/MariaDB.repo
    
[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/10.1/centos7-amd64
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1
   
    3  yum install MariaDB-server MariaDB-client -y
    4  systemctl start mariadb
    5  systemctl enable mariadb
    6  systemctl status mariadb
    7  yum install openssh-clients -y
    8  mysql_secure_installation



NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MariaDB to secure it, we'll need the current
password for the root user.  If you've just installed MariaDB, and
you haven't set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none):
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MariaDB
root user without the proper authorisation.

Set root password? [Y/n] y                                                 ----HERE WE GAVE PASSWORD
 ... success.

By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] y
 ... Success!

Normally, root should only be allowed to connect from 'localhost'.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] n
 ... Success!

By default, MariaDB comes with a database named 'test' that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] y
 - Dropping test database...
 ... Success!
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] y
 ... Success!

Cleaning up...

All done!  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks for using MariaDB!


	
    9  mysql -V
   10  mysqld --print-defaults
   11  mysql -u root -p          --LOGIN TO MYSQL
	
	MariaDB [(none)]>create database kodekloud_db8;
	MariaDB [(none)]>use kodekloud_db8;
	MariaDB [kodekloud_db8]>create user kodekloud_cap identified by 'password';
	MariaDB [kodekloud_db8]>select host, user, password from mysql.user;
	MariaDB [kodekloud_db8]>GRANT ALL PRIVILEGES ON kodekloud_db8.* TO 'kodekloud_cap';
        MariaDB [kodekloud_db8]>show grants for kodekloud_cap;
        MariaDB [kodekloud_db8]>exit

-- ON JUMP SERVER
=================
     1  sudo scp /home/thor/db.sql peter@stdb01:/home/peter 
(IF IT NOT WORKING INSTALL OPENSSH-CLIENTS IN DB SERVER yum install openssh-clients)    

-- ON DATABASE SERVER
=====================
    12  mysql -u kodekloud_cap -p kodekloud_db8 < db.sql;      --RESTORING DUMP FILE IN DATABASE BY USING USER(IMPORT DATA)  -- it asks password of user

-- ON STORAGE SERVER
====================
     1  sudo -i
     2  vi /data/wp-config.php
db_name ‘kodekloud_db8’
db_user ‘kodekloud_cap’
db_host ‘stdb01:3306’
db_pass ‘password’         



NOTE
====


If the database is reach or not check it in any app server and run below command:

yum install -y mariadb-server && systemctl start mariadb && systemctl enable mariadb && mysql -u kodekloud_aim -p -h stdb01

Finally click select port to view on host1 in Terminal + icon if it reaching it is success.

References:
https://websiteforstudents.com/configure-remote-access-mysql-mariadb-databases/
https://linuxize.com/post/how-to-create-mysql-user-accounts-and-grant-privileges/
https://www.digitalocean.com/community/tutorials/how-to-import-and-export-databases-in-mysql-or-mariadb























































